:word2vec a :word_embedding ;
  dc:description "Word2vec is a group of related models that are used to produce word embeddings. These models are shallow, two-layer neural networks that are trained to reconstruct linguistic contexts of words. Word2vec takes as its input a large corpus of text and produces a vector space, typically of several hundred dimensions, with each unique word in the corpus being assigned a corresponding vector in the space. Word vectors are positioned in the vector space such that words that share common contexts in the corpus are located close to one another in the space" ;
  :input :text-corpus ;
  :output :vector_space_embedding ;
  :described-in <https://en.wikipedia.org/wiki/Word2vec> .

:word2vec_continuous_skipgram :variant-of :word2vec ;
  dc:description "the model uses the current word to predict the surrounding window of context words. The skip-gram architecture weighs nearby context words more heavily than more distant context words." .

:word2vec_continuous_CBOW :variant-of :word2vec ;
  dc:title "Word2Vec continuous bag-of-words (CBOW)" ;
  dc:description "the model predicts the current word from a window of surrounding context words. The order of context words does not influence prediction (bag-of-words assumption)." .


:graph_node_embedding rdfs:subClassOf :node_embedding ;
  dc:description "A feature embedding methods whose input is elements of a graph." ;
  :operates-on :graph .

:heterogeneous_graph_node_embedding rdfs:subClassOf :graph_node_embedding ;
  :operates-on :heterogeneous_graph .

:knowledge_graph_embedding rdfs:subClassOf :heterogeneous_graph_node_embedding ;
  rdfs:comment "not really any different from a het graph?" ;
  skos:altTerm "relational graph embedding" ;
  :operates-on :knowledge_graph .

:node2vec a :graph_node_embedding ;
  dc:description "an algorithmic framework for learn- ing continuous feature representations for nodes in networks." ;
  :has-input :undirected-graph ;
  :extends :word2vec_continuous_skipgram ;   ## maps concept of word-context in text to a node in a graph
  :first-described-in arxiv:1607.00653 .

:DL2vec a :graph_node_embedding ;
  dc:title "Description Logic 2Vec" ;
  :github <https://github.com/bio-ontology-research-group/DL2Vec> ;
  dc:description "a method that can convert different types of Description Logic axioms into graph representation, and then generate an embedding for each node and edge type" ;
  :has-input :description_logic_ontology ;
  :first-described-in <https://doi.org/10.1101/2020.03.30.015594> .

:OWL2vec a :graph_node_embedding ;
  dc:description "a method that can convert different types of Description Logic axioms into graph representation, and then generate an embedding for each node and edge type" ;
  :notes "in contrast to OPA2Vec and Onto2Vec (which translate to sentences and use word2vec) this approach (i) projects the ontology into a graph, (ii) implements several strategies to walk the ontology graph, (iii) creates a corpus of sentences according to the walking strategies, and (iv) generates concept embeddings from that corpus." ;
  :github <https://gitlab.com/oholter/owl2vec> ;
  :has-input :description_logic_ontology ;
  :described-in <https://www.duo.uio.no/bitstream/handle/10852/69078/thesis_ole_magnus_holter.pdf> .
  :first-described-in <http://ceur-ws.org/Vol-2456/paper9.pdf> .

:OPA2Vec a :graph_node_embedding ;
  :uses :word2vec ;
  :described-in <http://ceur-ws.org/Vol-2456/paper9.pdf> .

:OntoVec a :graph_node_embedding ;
  :uses :word2vec ;
  :described-in <http://ceur-ws.org/Vol-2456/paper9.pdf> .

:RDFVec a :graph_node_embedding ;
  :described-in <http://ceur-ws.org/Vol-2456/paper9.pdf> .

:metapath2vec a :graph_node_embedding ;
  :uses :metapath ;
  :first-described-in <https://doi.org/10.1145/3097983.3098036> .

:metapath2vec_plus_plus a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  dc:title "metapath2vec++" ;
  dc:description "generates random walks guided by a single metapath, which are then fed to a skip-gram model" ;
  :uses :skip-gram ;
  :first-described-in <https://doi.org/10.1145/3097983.3098036> .

:ESim a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  dc:description "generates node embeddings by learning from sampled positive and negative metapath instances" .

:HIN2Vec a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  dc:description "carries out multiple prediction training tasks to learn representations of nodes and metapaths of a heterogeneous graph" .

:HER2Vec a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  :uses :DeepWalk ;
  dc:description "converts a heterogeneous graph into a homogeneous graph based on metapath- based neighbors and applies the DeepWalk model to learn the node embeddings of the target type" .

:HAN a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  :uses :DeepWalk ;
  dc:description "converts a heterogeneous graph into multiple metapath-based homogeneous graphs in a similar way, but uses a graph attention network archi- tecture to aggregate information from the neighbors and leverages the attention mechanism to combine various metapaths." .

:PME a :heterogeneous_graph_node_embedding ;
  :uses :metapath ;
  :uses :DeepWalk ;
  dc:description "earns node embeddings by projecting them into the corresponding relation spaces and optimizing the proximity between the projected nodes" .

:RESCAL a :knowledge_graph_embedding ;
  dc:description "computes a three-way factorization of an adjacency tensor that represents the knowledge graph. Alternatively, it can be interpreted as a compositional model, where pairs of entities are represented via the tensor product of their embeddings" ;
  foaf:depicted-by <https://mnick.github.io/img/rescal_factors.jpg> ;
  :performance-notes "RESCAL can be hard to scale to very large knowledge-graphs because its has a quadratic runtime and memory complexity with regard to the embedding dimension" ;
  :described-in <https://mnick.github.io/project/knowledge-graph-embeddings/> , arxiv:1503.00759 .

:HolE a :knowledge_graph_embedding ;
  dc:description "learn compositional vector space representations of entire knowledge graphs. The proposed method is related to holographic models of associative memory in that it employs circular correlation to create compositional representations. By using correlation as the compositional operator HolE can capture rich interactions but simultaneously remains efficient to compute, easy to train, and scalable to very large datasets" ;
  :first-described-in arxiv:1510.04935 .

scikit-kge a :tool ;
  :github <https://github.com/mnick/scikit-kge> ;
  :implements :knowledge_graph_embedding .

:magnn a :graph_node_embedding ;
  dc:title "Metapath Aggregated Graph Neural Network" ;
  dc:description "MAGNN is constructed by three major components: node content transforma- tion, intra-metapath aggregation, and inter-metapath aggregation." ;
  :first-described-in doi:10.1145/3366423.3380297 .

:metapath a :graph_concept ;
  dc:description "A metapath is an ordered sequence of node types and edge types defined on the network schema, which describes a composite relation between the nodes types involved" ;
  skos:definition "A metapath P is a path of the form A_1 -[R_1]-> A_2-[R_2]-> .. -[R_l]-> A_{l+1} which describes a composite relation R = R_1 o ... o R_l between two node types A_1 and A_{l+1}" ;
  :described-in doi:10.1145/3366423.3380297 .

:heterogeneous_graph rdfs:subClassOf :graph_concept ;
  skos:definition "A heterogeneous graph is defined as a graph G = (V, E) associated with a node type mapping function φ : V → A and an edge type mapping function ψ : E → R. A and R denote the predefined sets of node types and edge types, respectively, with |A| + |R| > 2." ;
  :described-in doi:10.1145/3366423.3380297 .

  :graph_neural_network rdfs:subClassOf :neural_network ;
  rdfs:label "GNN" ;
  dc:description "The goal of a GNN is to learn a low-dimensional vector representation h_v for every node v" ;
  :described-in doi:10.1145/3366423.3380297 .

:spectral_based_graph_neural_network rdfs:subClassOf :graph_neural_network ;
  dc:description "graph convolution in the Fourier domain of a graph" ;
  :described-in doi:10.1145/3366423.3380297 .

:ChebNet a spectral_based_graph_neural_network ;
  dc:description "Chebyshev polynomials to filter graph signals (node features) in the graph Fourier domain" ;
  :described-in doi:10.1145/3366423.3380297 .

:GCN a spectral_based_graph_neural_network ;
  :variant-of :ChebNet ;
  dc:description "constrains and simplifies the parameters of ChebNet to alleviate the overfitting problem and improve the performance" ;
  :described-in doi:10.1145/3366423.3380297 .

[
 a :Comparison ;
 dc:title "spectral-based GNNs suffer from poor scalability and generalization ability, because they require the entire graph as input for every layer. Spatial GCNs have been proposed to address this" ;
 rdf:subject :spectral_based_graph_neural_network ;
 rdf:object :spatial_GCN ;
 :described-in doi:10.1145/3366423.3380297 .

]

:spatial_GCN rdfs:subClassOf :graph_neural_network ;
  dc:description "define convolutions directly in the graph domain by aggregating feature information from neighbors for each node, thus imitating the convolution operations of convolutional neural networks for image data" ;
  :described-in doi:10.1145/3366423.3380297 .

:GraphSAGE a :spatial_GCN ;
  :described-in doi:10.1145/3366423.3380297 .

:link-prediction rdfs:subClassOf :task ;
  :described-in arxiv:1503.00759 .

:link-based-clustering rdfs:subClassOf :task ;
  skos:altTerm "community detection" ;
  :described-in arxiv:1503.00759 .

:ontology-classification rdfs:subClassOf :link-prediction ;
  dc:description "A link prediction task where the goal is to predict either subsumptions edges (e.g. owl:subClassOf) or instance-of edges (e.g. rdf:type)" .

arxiv:1503.00759 a :review ;
  title "A Review of Relational Machine Learning for Knowledge Graphs" ;
